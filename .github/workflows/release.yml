name: Release Go Binary

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0, v0.1.0

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create releases

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude: # No official Go support for windows/arm64 executables widely used yet
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Or your desired Go version

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          BINARY_NAME="git-secret"
          if [ "$GOOS" = "windows" ]; then
            BINARY_NAME="${BINARY_NAME}.exe"
          fi
          OUTPUT_NAME="git-secret-${GOOS}-${GOARCH}"
          if [ "$GOOS" = "windows" ]; then
            OUTPUT_NAME="${OUTPUT_NAME}.exe"
          fi
          go build -v -o "${OUTPUT_NAME}" -ldflags="-s -w" .
          echo "ASSET_PATH=${OUTPUT_NAME}" >> $GITHUB_ENV
          echo "ASSET_NAME=${OUTPUT_NAME}" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.ASSET_PATH }}
          # The release will be created automatically if it doesn't exist,
          # using the tag name as the release name.
          # You can customize release notes, etc. here if needed.